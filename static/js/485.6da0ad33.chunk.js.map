{"version":3,"file":"static/js/485.6da0ad33.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENF,EAAAA,GAAAA,IAAA,sCAAyCC,IAFnC,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,QAAQC,IAAI,KAAMC,SALW,yDAAH,qDASjBC,EAAa,mCAAG,WAAMC,GAAN,gGAEFV,EAAAA,GAAAA,IAAA,iBACXU,EADW,oBACQT,EADR,oBAFE,cAEnBE,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBE,QAAQC,IAAI,KAAMC,SAPO,yDAAH,sDAWbG,EAAe,mCAAG,WAAMC,GAAN,gGAEJZ,EAAAA,GAAAA,IAAA,gCACIC,EADJ,kBACqBW,IAHjB,cAErBT,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,IAAI,KAAMC,SAPS,yDAAH,sDAWfK,EAAY,mCAAG,WAAMH,GAAN,gGAEDV,EAAAA,GAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,oBAFC,cAElBE,EAFkB,yBAKjBA,EAASC,KAAKU,MALG,gCAOxBR,QAAQC,IAAI,KAAMC,SAPM,yDAAH,sDAWZO,EAAiB,mCAAG,WAAML,GAAN,gGAENV,EAAAA,GAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,oBAFM,cAEvBE,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,gCAO7BC,QAAQC,IAAI,KAAMC,SAPW,yDAAH,qD,0IC5CjBQ,EAAQC,EAAAA,GAAAA,GAAH,+CAILC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8L,SCsBvB,EAxBa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,MAAoBwB,MAAK,SAAAvB,GAAQ,OAAImB,EAAUnB,EAAd,GAClC,GAAE,KAGD,iCACE,SAACa,EAAD,8BACA,wBACGK,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACX,EAAD,CAAYY,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMT,GAA/C,SACGM,KAFID,EADC,QAUnB,C","sources":["api/fetchApi.js","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7bdc810ad124afd40c6daedecd43d00a';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMoviesById = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getReviewsOnMovie = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding-left: 24px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  &.visited {\n    color: black;\n  }\n\n  &:hover,\n  &:focus {\n    color: red;\n    text-decoration: underline;\n  }\n`;\n","import { getTrendingMovies } from 'api/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink, Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies().then(response => setMovies(response));\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <StyledLink to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </StyledLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","console","log","message","getMoviesById","movieId","getMovieByQuery","query","getMovieCast","cast","getReviewsOnMovie","Title","styled","StyledLink","NavLink","useState","movies","setMovies","location","useLocation","useEffect","then","map","id","title","to","state","from"],"sourceRoot":""}